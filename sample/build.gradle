apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'

android {
    compileSdkVersion 28

    defaultConfig {
        minSdkVersion 15
        targetSdkVersion 28
        versionCode 1
        versionName "1.0"

        buildConfigField 'boolean', 'MOCK_ENABLED', 'false'
    }

    buildTypes {
        release {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt')
        }
    }

    sourceSets {
        androidTest {
            assets.srcDir file( 'src/test/assets' )
        }
    }

    lintOptions {
        disable 'InvalidPackage','MissingTranslation'
    }

    flavorDimensions "common"
    productFlavors {
        dev {
            dimension "common"
        }
        mSDKMock {
            dimension "common"
            buildConfigField 'boolean', 'MOCK_ENABLED', 'true'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

dependencies {
    compile project(':library')
    compile "com.squareup.okhttp3:mockwebserver:4.0.1"
    testImplementation "junit:junit:4.12"
    testImplementation 'androidx.test:core:1.2.0'
    testImplementation "org.robolectric:robolectric:4.2"
    testImplementation ("androidx.test:runner:1.1.0") {
        exclude group: 'com.android.support', module: 'support-annotations'
    }
    testImplementation "org.mockito:mockito-core:2.23.0"
    testImplementation "androidx.test.ext:junit:1.1.1"
    compile 'com.google.code.gson:gson:2.8.5'
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
}

task copyAppSettings {
    doLast {
        if (!file("src/main/assets/app.properties").exists()) {
            copy {
                from("src/main/assets/")
                rename("demo_app.properties", "app.properties")
                into("src/main/assets")
            }
        }
    }
}

preBuild.dependsOn(copyAppSettings)
